// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:../dev.db"
}

model Page {
  id        Int      @id @default(autoincrement())
  title     String
  incidents Incident[]
  owner     User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Incident {
  id        Int      @id @default(autoincrement())
  date      DateTime @default(now())
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  page      Page     @relation(fields: [pageId], references: [id], onDelete: Cascade)
  pageId    Int
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? // For MySQL @db.Text
  access_token       String? // For MySQL @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? // For MySQL @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  
  incidents     Incident[]
  pages         Page[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}